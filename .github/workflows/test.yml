name: Get-IP

on:
  push:
    branches: [ "testing" ]
  pull_request:
    branches: [ "testing" ]
  workflow_dispatch:
env:
 json: "{\"products\":[{\"product\":\"ReferenceClient\",\"ip\":\"192.168.0.1\"},{\"product\":\"WINCCCA\",\"ip\":\"192.168.0.2\"},{\"product\":\"WINCCPRO\",\"ip\":\"192.168.0.3\"},{\"product\":\"WINCCPRO,LagecyPanel,FeatureConfiguration\",\"ip\":\"192.168.0.4\"},{\"product\":\"WINCCPRO,LegacyPanel\",\"ip\":\"192.168.0.5\"}]}"
jobs:

  job1:
    runs-on: ubuntu-latest    

    steps:
      - name: Set color
        env:
         test: "[{'vapp_id': 'loadtest-0', 'ip_address': '192.212.205.9'}, {'vapp_id': 'loadtest-1', 'ip_address': '192.212.205.11'}]"
        id: set-color-var
        run: echo "vapps=${{ env.test }}" >> "$GITHUB_OUTPUT"
    
      - name: set product
        env:
         setup: "[{'product':'product1'},{'product':'product2'}]"
        id: set-product
        run: echo "product=${{ env.setup }}" >> "$GITHUB_OUTPUT"
       
         product {'product1':'192.168.0.1'},{'product2':'192.168.0.2'}
         
    outputs:
      vapps: ${{steps.set-color-var.outputs.vapps}} 
      product: ${{ steps.set-product.outputs.product }}
                
  get-color:
    runs-on: windows-latest
    needs: job1
   # strategy:
    # matrix:
     # host: ${{fromJSON($env.json).products}}
      
    steps:
      - name: install ${{matrix.host}}
        run:  node -e "const matrix = JSON.parse(process.env.json); matrix.products.forEach(p => console.log(`${p.product} ${p.ip}`));" > matrix.txt

 
